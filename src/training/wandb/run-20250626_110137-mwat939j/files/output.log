✅ Created open loop trainer for cyclic sequences
   🎯 Experiment: open_cyclic_20250626_110137
   🔁 Loop mode: open
   📊 Cycle penalty: 1.0
   🚀 Riemannian: True (geodesic)

🚀 Starting OPEN loop training on cyclic sequences
Loading cyclic sprites data from /scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/clean_riemannian_flow_vae/data/processed/Sprites_train_cyclic.pt...
Cyclic sprites data shape: torch.Size([3000, 8, 3, 64, 64])
Data range: [0.000, 0.996]
✅ train cyclic dataset size: 3000
✅ Final data shape: torch.Size([3000, 8, 3, 64, 64])
✅ Final data range: [0.000, 0.996]
🔍 Verifying cyclicity of first 5 sequences:
   Seq 0: MSE = 0.00e+00
   Seq 1: MSE = 0.00e+00
   Seq 2: MSE = 0.00e+00
   Seq 3: MSE = 0.00e+00
   Seq 4: MSE = 0.00e+00
Loading cyclic sprites data from /scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/clean_riemannian_flow_vae/data/processed/Sprites_train_cyclic.pt...
Cyclic sprites data shape: torch.Size([3000, 8, 3, 64, 64])
Data range: [0.000, 0.996]
✅ train cyclic dataset size: 800
✅ Final data shape: torch.Size([800, 8, 3, 64, 64])
✅ Final data range: [0.000, 0.996]
🔍 Verifying cyclicity of first 5 sequences:
   Seq 0: MSE = 0.00e+00
   Seq 1: MSE = 0.00e+00
   Seq 2: MSE = 0.00e+00
   Seq 3: MSE = 0.00e+00
   Seq 4: MSE = 0.00e+00

📈 Epoch 1/3 - OPEN Mode
Epoch 0 (open): 100%|█| 187/187 [01:10<00:00,  2.64it/s, Loss=4479.1201, Recon=4629.2842, KL=8.8310, Flow=-2
🧠 USING RIEMANNIAN METRIC-AWARE POSTERIOR (batch_size=16)
🔍 METRIC DIAGNOSTIC (call 100):
   Eigenvalues: min=3.623e+01, max=5.681e+01, mean=5.044e+01
   Det(G): 1.599e+27, Trace(G): 8.070e+02
   Condition number: 1.57e+00
   Euclidean distance²: mean=0.256, std=0.268
   Riemannian distance²: mean=13.218, std=4.662
   Amplification factor: 51.72x
🧠 Creating sequence trajectory visualization for epoch 0
🎬 Creating comprehensive reconstruction visualization for epoch 0
🔬 Creating manifold visualizations for epoch 0
📊 Analyzing 16 sequences with 8 timesteps
📍 Computing metrics for timestep 1/8 using flow-evolved coordinates
   Computing G(z) at 496 flow-evolved points...
   ✅ Computed metrics: det(G⁻¹) range [2.18e-31, 1.78e-13]
   ✅ Timestep 0 data collected (metrics: 7 properties)
📍 Computing metrics for timestep 2/8 using flow-evolved coordinates
   Computing G(z) at 496 flow-evolved points...
   ✅ Computed metrics: det(G⁻¹) range [1.00e-32, 1.00e-32]
   ✅ Timestep 1 data collected (metrics: 7 properties)
📍 Computing metrics for timestep 3/8 using flow-evolved coordinates
   Computing G(z) at 496 flow-evolved points...
   ✅ Computed metrics: det(G⁻¹) range [1.00e-32, 1.00e-32]
   ✅ Timestep 2 data collected (metrics: 7 properties)
📍 Computing metrics for timestep 4/8 using flow-evolved coordinates
   Computing G(z) at 496 flow-evolved points...
   ✅ Computed metrics: det(G⁻¹) range [1.00e-32, 1.00e-32]
   ✅ Timestep 3 data collected (metrics: 7 properties)
📍 Computing metrics for timestep 5/8 using flow-evolved coordinates
   Computing G(z) at 496 flow-evolved points...
   ✅ Computed metrics: det(G⁻¹) range [1.00e-32, 1.00e-32]
   ✅ Timestep 4 data collected (metrics: 7 properties)
📍 Computing metrics for timestep 6/8 using flow-evolved coordinates
   Computing G(z) at 496 flow-evolved points...
   ✅ Computed metrics: det(G⁻¹) range [1.00e-32, 1.00e-32]
   ✅ Timestep 5 data collected (metrics: 7 properties)
📍 Computing metrics for timestep 7/8 using flow-evolved coordinates
   Computing G(z) at 496 flow-evolved points...
   ✅ Computed metrics: det(G⁻¹) range [1.00e-32, 1.00e-32]
   ✅ Timestep 6 data collected (metrics: 7 properties)
📍 Computing metrics for timestep 8/8 using flow-evolved coordinates
   Computing G(z) at 496 flow-evolved points...
   ✅ Computed metrics: det(G⁻¹) range [1.00e-32, 1.00e-32]
   ✅ Timestep 7 data collected (metrics: 7 properties)
🎨 Creating visualizations with metrics for 8 timesteps...
📈 Creating enhanced PCA analysis with flow-evolved coordinates...
✅ Enhanced PCA analysis created: 8/8 timesteps have metrics
🔥 Creating enhanced manifold heatmaps with flow-evolved coordinates...
✅ Enhanced manifold heatmaps created
⏱️ Creating temporal metric analysis...
✅ Temporal metric analysis created: 8/8 timesteps analyzed
✨ Manifold visualizations complete for epoch 0
🌍 Creating enhanced geodesic & metric impact visualizations for epoch 0
🌍 Creating INTERACTIVE geodesic slider visualization with timestep evolution...
📊 Computing DYNAMIC geodesic background fields for each timestep...
   Computing background fields for timestep 0...
     ✅ Geodesic background computed for t=0: det(G) range [1.00e+04, 1.00e+04]
   Computing background fields for timestep 1...
     🔄 Applying 1 forward flow steps to geodesic grid...
       Applying flow 0: z_0 → z_1
     ✅ Geodesic grid transformed to timestep 1 coordinate system
     ✅ Geodesic background computed for t=1: det(G) range [1.00e+04, 1.00e+04]
   Computing background fields for timestep 2...
     🔄 Applying 2 forward flow steps to geodesic grid...
       Applying flow 0: z_0 → z_1
       Applying flow 1: z_1 → z_2
     ✅ Geodesic grid transformed to timestep 2 coordinate system
     ✅ Geodesic background computed for t=2: det(G) range [1.00e+04, 1.00e+04]
   Computing background fields for timestep 3...
     🔄 Applying 3 forward flow steps to geodesic grid...
       Applying flow 0: z_0 → z_1
       Applying flow 1: z_1 → z_2
       Applying flow 2: z_2 → z_3
     ✅ Geodesic grid transformed to timestep 3 coordinate system
     ✅ Geodesic background computed for t=3: det(G) range [1.00e+04, 1.00e+04]
   Computing background fields for timestep 4...
     🔄 Applying 4 forward flow steps to geodesic grid...
       Applying flow 0: z_0 → z_1
       Applying flow 1: z_1 → z_2
       Applying flow 2: z_2 → z_3
       Applying flow 3: z_3 → z_4
     ✅ Geodesic grid transformed to timestep 4 coordinate system
     ✅ Geodesic background computed for t=4: det(G) range [1.00e+04, 1.00e+04]
   Computing background fields for timestep 5...
     🔄 Applying 5 forward flow steps to geodesic grid...
       Applying flow 0: z_0 → z_1
       Applying flow 1: z_1 → z_2
       Applying flow 2: z_2 → z_3
       Applying flow 3: z_3 → z_4
       Applying flow 4: z_4 → z_5
     ✅ Geodesic grid transformed to timestep 5 coordinate system
     ✅ Geodesic background computed for t=5: det(G) range [1.00e+04, 1.00e+04]
   Computing background fields for timestep 6...
     🔄 Applying 6 forward flow steps to geodesic grid...
       Applying flow 0: z_0 → z_1
       Applying flow 1: z_1 → z_2
       Applying flow 2: z_2 → z_3
       Applying flow 3: z_3 → z_4
       Applying flow 4: z_4 → z_5
       Applying flow 5: z_5 → z_6
     ✅ Geodesic grid transformed to timestep 6 coordinate system
     ✅ Geodesic background computed for t=6: det(G) range [1.00e+04, 1.00e+04]
   Computing background fields for timestep 7...
     🔄 Applying 7 forward flow steps to geodesic grid...
       Applying flow 0: z_0 → z_1
       Applying flow 1: z_1 → z_2
       Applying flow 2: z_2 → z_3
       Applying flow 3: z_3 → z_4
       Applying flow 4: z_4 → z_5
       Applying flow 5: z_5 → z_6
       Applying flow 6: z_6 → z_7
     ✅ Geodesic grid transformed to timestep 7 coordinate system
     ✅ Geodesic background computed for t=7: det(G) range [1.00e+04, 1.00e+04]
    ✅ Geodesic slider: Using FLOW-EVOLVED coordinates for timestep 0
    ✅ Geodesic slider: Using FLOW-EVOLVED coordinates for timestep 1
    ✅ Geodesic slider: Using FLOW-EVOLVED coordinates for timestep 2
    ✅ Geodesic slider: Using FLOW-EVOLVED coordinates for timestep 3
    ✅ Geodesic slider: Using FLOW-EVOLVED coordinates for timestep 4
    ✅ Geodesic slider: Using FLOW-EVOLVED coordinates for timestep 5
    ✅ Geodesic slider: Using FLOW-EVOLVED coordinates for timestep 6
    ✅ Geodesic slider: Using FLOW-EVOLVED coordinates for timestep 7
   📊 Geodesic frame 0: using det_G background range [1.00e+04, 1.00e+04]
   📊 Geodesic frame 1: using det_G background range [1.00e+04, 1.00e+04]
   📊 Geodesic frame 2: using det_G background range [1.00e+04, 1.00e+04]
   📊 Geodesic frame 3: using det_G background range [1.00e+04, 1.00e+04]
   📊 Geodesic frame 4: using det_G background range [1.00e+04, 1.00e+04]
   📊 Geodesic frame 5: using det_G background range [1.00e+04, 1.00e+04]
   📊 Geodesic frame 6: using det_G background range [1.00e+04, 1.00e+04]
   📊 Geodesic frame 7: using det_G background range [1.00e+04, 1.00e+04]
🌍 Interactive geodesic slider visualization saved: interactive_geodesic_slider_epoch_0.html
   📊 Tracks geodesics, eigenvalue fields, metric ellipses across 8 timesteps
   🎯 Use slider to explore geodesic evolution!
✅ Enhanced geodesic visualization created for epoch 0
✨ Creating FANCY interactive geodesic visualizations...
✨ Creating FANCY interactive geodesic visualizations for epoch 0
✨ Fancy interactive visualization created!
📁 Files: fancy_geodesic_analysis_epoch_0.html (interactive), fancy_geodesic_analysis_epoch_0.png (static)
🎯 Total trajectory points: 2256
🎬 Creating TEMPORAL metric evolution visualization...
🌊 Creating FLOW-BASED temporal metric evolution visualization for epoch 0
🌊 Computing flow-based det(G) evolution for 16 sequences with 8 timesteps
📍 Computing base metric det(G(z_i0))...
   Base det(G) range: [6.476e+08, 8.646e+30]
🌊 Propagating det(G) through flow chain...
   Flow step 1: z_0 → z_1
     |J_flow_1| range: [34561536135092240384.000, 553080561128534179840.000]
     det(G) range: [3.466e+28, inf]
   Flow step 2: z_1 → z_2
     |J_flow_2| range: [735426713223168.000, 873335488872710144.000]
     det(G) range: [inf, inf]
   Flow step 3: z_2 → z_3
     |J_flow_3| range: [26489122816.000, 70034312254193664.000]
     det(G) range: [inf, inf]
   Flow step 4: z_3 → z_4
     |J_flow_4| range: [26489122816.000, 1739274975342231552.000]
     det(G) range: [inf, inf]
   Flow step 5: z_4 → z_5
     |J_flow_5| range: [8103.084, 4311231800279040.000]
     det(G) range: [inf, inf]
   Flow step 6: z_5 → z_6
     |J_flow_6| range: [162754.797, 532048216064.000]
     det(G) range: [inf, inf]
   Flow step 7: z_6 → z_7
     |J_flow_7| range: [162754.797, 10686474223616.000]
     det(G) range: [inf, inf]
✅ Flow-based evolution complete!
   Final det(G) range: [6.476e+08, inf]
   Det(G) amplification: infx
📊 PCA projection complete (explained variance: 84.6%)
🔥 Computing spatial det(G) heatmaps for each timestep...
   Computing spatial heatmap for timestep 0...
   Computing spatial heatmap for timestep 1...
     ✅ Computed heatmap for t=1: det(G) range [1.00e+32, 1.00e+32]
   Computing spatial heatmap for timestep 2...
     ✅ Computed heatmap for t=2: det(G) range [1.00e+32, 1.00e+32]
   Computing spatial heatmap for timestep 3...
     ✅ Computed heatmap for t=3: det(G) range [1.00e+32, 1.00e+32]
   Computing spatial heatmap for timestep 4...
     ✅ Computed heatmap for t=4: det(G) range [1.00e+32, 1.00e+32]
   Computing spatial heatmap for timestep 5...
     ✅ Computed heatmap for t=5: det(G) range [1.00e+32, 1.00e+32]
   Computing spatial heatmap for timestep 6...
     ✅ Computed heatmap for t=6: det(G) range [1.00e+32, 1.00e+32]
   Computing spatial heatmap for timestep 7...
     ✅ Computed heatmap for t=7: det(G) range [1.00e+32, 1.00e+32]
✅ Computed 8 spatial heatmaps with evolving det(G) fields!
/scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/.venv/lib/python3.12/site-packages/numpy/core/_methods.py:173: RuntimeWarning:

invalid value encountered in subtract

/scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/.venv/lib/python3.12/site-packages/matplotlib/colors.py:2295: RuntimeWarning:

invalid value encountered in divide

/scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/clean_riemannian_flow_vae/src/training/train_cyclic_loop_comparison.py:4918: RuntimeWarning:

invalid value encountered in divide

/scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/.venv/lib/python3.12/site-packages/numpy/core/_methods.py:176: RuntimeWarning:

overflow encountered in multiply
🌊 Flow-based interactive animation saved: flow_based_animation_epoch_0.html
⚠️ Interactive temporal animation failed: Transform failed with error code 525: Cannot read property 'z' of undefined

Traceback (most recent call last):
  File "/scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/clean_riemannian_flow_vae/src/training/train_cyclic_loop_comparison.py", line 5578, in _create_interactive_temporal_animation
    fig.write_image(png_filename, width=1600, height=800, scale=2)
  File "/scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/.venv/lib/python3.12/site-packages/plotly/basedatatypes.py", line 3835, in write_image
    return pio.write_image(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/.venv/lib/python3.12/site-packages/plotly/io/_kaleido.py", line 266, in write_image
    img_data = to_image(
               ^^^^^^^^^
  File "/scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/.venv/lib/python3.12/site-packages/plotly/io/_kaleido.py", line 143, in to_image
    img_bytes = scope.transform(
                ^^^^^^^^^^^^^^^^
  File "/scratch/alaforgu/longitudinal_experiments/longitudinal_vaes/.venv/lib/python3.12/site-packages/kaleido/scopes/plotly.py", line 161, in transform
    raise ValueError(
ValueError: Transform failed with error code 525: Cannot read property 'z' of undefined
✨ Flow-based temporal metric evolution visualization created for epoch 0!
🌊 Creating TIMESTEP-SPECIFIC curvature analysis...
🌊 Creating timestep-specific curvature analysis for epoch 0
PCA variance explained: [0.61252505 0.2736059 ]
Computing curvature for all timesteps...
  Timestep 0/7
  Timestep 1/7
